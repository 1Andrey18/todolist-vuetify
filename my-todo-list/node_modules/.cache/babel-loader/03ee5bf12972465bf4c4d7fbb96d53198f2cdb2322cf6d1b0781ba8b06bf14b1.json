{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3de47834\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"My Todo List\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_subtitle = _resolveComponent(\"v-list-item-subtitle\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_checkbox = _resolveComponent(\"v-checkbox\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"my-todo-list\",\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      justify: \"center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\",\n        md: \"8\"\n      }, {\n        default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_list, {\n          dense: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, index) => {\n            return _openBlock(), _createBlock(_component_v_list_item, {\n              key: index,\n              class: \"todo-item\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                  class: _normalizeClass({\n                    'completed': todo.completed\n                  })\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(todo.title), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\"]), todo.description ? (_openBlock(), _createBlock(_component_v_list_item_subtitle, {\n                  key: 0\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(todo.description), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_action, null, {\n                default: _withCtx(() => [_createVNode(_component_v_checkbox, {\n                  modelValue: todo.completed,\n                  \"onUpdate:modelValue\": $event => todo.completed = $event\n                }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","fluid","default","_withCtx","_createVNode","_component_v_row","justify","_component_v_col","cols","md","_hoisted_1","_component_v_list","dense","_createElementBlock","_Fragment","_renderList","$data","todos","todo","index","_component_v_list_item","key","_component_v_list_item_content","_component_v_list_item_title","_normalizeClass","completed","_createTextVNode","_toDisplayString","title","_","description","_component_v_list_item_subtitle","_createCommentVNode","_component_v_list_item_action","_component_v_checkbox","modelValue","$event"],"sources":["C:\\Users\\BY-FARIKS\\OneDrive\\Рабочий стол\\todolist vuetify\\my-todo-list\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <v-container class=\"my-todo-list\" fluid>\r\n      <v-row justify=\"center\">\r\n        <v-col cols=\"12\" md=\"8\">\r\n          <h1 class=\"title\">My Todo List</h1>\r\n          <v-list dense>\r\n            <v-list-item v-for=\"(todo, index) in todos\" :key=\"index\" class=\"todo-item\">\r\n              <v-list-item-content>\r\n                <v-list-item-title :class=\"{ 'completed': todo.completed }\">{{ todo.title }}</v-list-item-title>\r\n                <v-list-item-subtitle v-if=\"todo.description\">{{ todo.description }}</v-list-item-subtitle>\r\n              </v-list-item-content>\r\n              <v-list-item-action>\r\n                <v-checkbox v-model=\"todo.completed\"></v-checkbox>\r\n              </v-list-item-action>\r\n            </v-list-item>\r\n          </v-list>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        todos: [\r\n          { title: 'Sample 101', description: 'Sample 1 Todo Description', completed: false },\r\n          { title: 'Sample 102', description: '', completed: false },\r\n          { title: 'Sample 103', description: '', completed: true },\r\n          { title: 'Sample 104', description: '', completed: true }\r\n        ]\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .my-todo-list {\r\n    background-color: #2c2c2e;\r\n    color: #fff;\r\n    min-height: 100vh;\r\n    padding: 20px;\r\n  }\r\n  .title {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  .todo-item {\r\n    background-color: #3a3a3c;\r\n    border: 1px solid #444;\r\n    margin-bottom: 10px;\r\n    border-radius: 5px;\r\n  }\r\n  .completed {\r\n    text-decoration: line-through;\r\n    color: #777;\r\n  }\r\n  </style>\r\n  "],"mappings":";;gEAIUA,mBAAA,CAAmC;EAA/BC,KAAK,EAAC;AAAO,GAAC,cAAY;;;;;;;;;;;;uBAHpCC,YAAA,CAiBcC,sBAAA;IAjBDF,KAAK,EAAC,cAAc;IAACG,KAAK,EAAL;;IADtCC,OAAA,EAAAC,QAAA,CAEM,MAeQ,CAfRC,YAAA,CAeQC,gBAAA;MAfDC,OAAO,EAAC;IAAQ;MAF7BJ,OAAA,EAAAC,QAAA,CAGQ,MAaQ,CAbRC,YAAA,CAaQG,gBAAA;QAbDC,IAAI,EAAC,IAAI;QAACC,EAAE,EAAC;;QAH5BP,OAAA,EAAAC,QAAA,CAIU,MAAmC,CAAnCO,UAAmC,EACnCN,YAAA,CAUSO,iBAAA;UAVDC,KAAK,EAAL;QAAK;UALvBV,OAAA,EAAAC,QAAA,CAMyB,MAA8B,E,kBAA3CU,mBAAA,CAQcC,SAAA,QAd1BC,WAAA,CAMiDC,KAAA,CAAAC,KAAK,EANtD,CAMiCC,IAAI,EAAEC,KAAK;iCAAhCpB,YAAA,CAQcqB,sBAAA;cAR+BC,GAAG,EAAEF,KAAK;cAAErB,KAAK,EAAC;;cAN3EI,OAAA,EAAAC,QAAA,CAOc,MAGsB,CAHtBC,YAAA,CAGsBkB,8BAAA;gBAVpCpB,OAAA,EAAAC,QAAA,CAQgB,MAAgG,CAAhGC,YAAA,CAAgGmB,4BAAA;kBAA5EzB,KAAK,EARzC0B,eAAA;oBAAA,aAQ0DN,IAAI,CAACO;kBAAS;;kBARxEvB,OAAA,EAAAC,QAAA,CAQ4E,MAAgB,CAR5FuB,gBAAA,CAAAC,gBAAA,CAQ+ET,IAAI,CAACU,KAAK,iB;kBARzFC,CAAA;gEAS4CX,IAAI,CAACY,WAAW,I,cAA5C/B,YAAA,CAA2FgC,+BAAA;kBAT3GV,GAAA;gBAAA;kBAAAnB,OAAA,EAAAC,QAAA,CAS8D,MAAsB,CATpFuB,gBAAA,CAAAC,gBAAA,CASiET,IAAI,CAACY,WAAW,iB;kBATjFD,CAAA;gDAAAG,mBAAA,e;gBAAAH,CAAA;4CAWczB,YAAA,CAEqB6B,6BAAA;gBAbnC/B,OAAA,EAAAC,QAAA,CAYgB,MAAkD,CAAlDC,YAAA,CAAkD8B,qBAAA;kBAZlEC,UAAA,EAYqCjB,IAAI,CAACO,SAAS;kBAZnD,uBAAAW,MAAA,IAYqClB,IAAI,CAACO,SAAS,GAAAW;;gBAZnDP,CAAA;;cAAAA,CAAA;;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}